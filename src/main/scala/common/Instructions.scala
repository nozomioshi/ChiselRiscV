package common

import chisel3.util.BitPat

object Instructions {
    // Load & Store
    val Lw      = BitPat("b?????????????????010?????0000011")
    val Sw      = BitPat("b?????????????????010?????0100011")

    // Add
    val Add     = BitPat("b0000000??????????000?????0110011")
    val Addi    = BitPat("b?????????????????000?????0010011")

    // Subtract
    val Sub     = BitPat("b0100000??????????000?????0110011")

    // Logical
    val And     = BitPat("b0000000??????????111?????0110011")
    val Or      = BitPat("b0000000??????????110?????0110011")
    val Xor     = BitPat("b0000000??????????100?????0110011")
    val Andi    = BitPat("b?????????????????111?????0010011")
    val Ori     = BitPat("b?????????????????110?????0010011")
    val Xori    = BitPat("b?????????????????100?????0010011")

    // Shift
    val Sll     = BitPat("b0000000??????????001?????0110011")
    val Srl     = BitPat("b0000000??????????101?????0110011")
    val Sra     = BitPat("b0100000??????????101?????0110011")
    val Slli    = BitPat("b0000000??????????001?????0010011")
    val Srli    = BitPat("b0000000??????????101?????0010011")
    val Srai    = BitPat("b0100000??????????101?????0010011")

    // Compare
    val Slt     = BitPat("b0000000??????????010?????0110011")
    val Sltu    = BitPat("b0000000??????????011?????0110011")
    val Slti    = BitPat("b?????????????????010?????0010011")
    val Sltiu   = BitPat("b?????????????????011?????0010011")

    // Branch
    val Beq     = BitPat("b?????????????????000?????1100011")
    val Bne     = BitPat("b?????????????????001?????1100011")
    val Blt     = BitPat("b?????????????????100?????1100011")
    val Bge     = BitPat("b?????????????????101?????1100011")
    val Bltu    = BitPat("b?????????????????110?????1100011")
    val Bgeu    = BitPat("b?????????????????111?????1100011")

    // Jump
    val Jal     = BitPat("b?????????????????????????1101111")
    val Jalr    = BitPat("b?????????????????000?????1100111")

    // Load immediate
    val Lui     = BitPat("b?????????????????????????0110111")
    val AuiPc   = BitPat("b?????????????????????????0010111")

    // CSR
    val CsrRw   = BitPat("b?????????????????001?????1110011")
    val CsrRwi  = BitPat("b?????????????????101?????1110011")
    val CsrRs   = BitPat("b?????????????????010?????1110011")
    val CsrRsi  = BitPat("b?????????????????110?????1110011")
    val CsrRc   = BitPat("b?????????????????011?????1110011")
    val CsrRci  = BitPat("b?????????????????111?????1110011")

    // Exception
    val Ecall   = BitPat("b00000000000000000000000001110011")

    // Vector
    val VsetVli = BitPat("b?????????????????111?????1010111")
    val Vle     = BitPat("b000000100000?????????????0000111")
    val Vse     = BitPat("b000000100000?????????????0100111")
    val Vaddvv  = BitPat("b0000001??????????000?????1010111")

    // Custom
    val Pcnt    = BitPat("b000000000000?????110?????0001011")
}
